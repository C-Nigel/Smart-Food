
<head>
	<title>Register</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
<!--===============================================================================================-->	
	<link rel="stylesheet" type="text/css" href="/css/usercss/util.css">
	<link rel="stylesheet" type="text/css" href="/css/usercss/main.css">
<!--===============================================================================================-->
</head>
<body>
	
	<div class="limiter">
		<div class="container-login100">
			<div class="wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50">
				<form action="../user/register" method="post" id="regForm" class="login100-form validate-form">
					<span class="login100-form-title p-b-33">
						User Registration
					</span>
					<div class="tab">
						<div class="wrap-input100 validate-input" data-validate = "Valid name is required: John">
							<input class="input100" type="text" name="name" placeholder="Name" required />
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>

						<div class="wrap-input100 validate-input" data-validate = "Valid admin number is required: 123456A">
							<input class="input100" type="text" name="adminNo" placeholder="Admin number" required />
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>

						<div class="wrap-input100 rs1 validate-input" data-validate="Password is required">
							<input class="input100" type="password" name="password" placeholder="Password" required />
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>

						<div class="wrap-input100 rs1 validate-input" data-validate="Confirm your password">
							<input class="input100" type="password" name="confirmpassword" placeholder="Confirm Password" required />
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>
					</div>
					<div class="tab">
						<div class="wrap-input100 validate-input" data-validate = "Valid number is required: 12345678">
							<input class="input100" type="text" name="phonenumber" placeholder="Phone Number">
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>

						<div class="wrap-input100 validate-input" data-validate = "Valid media is required: 123456A">
							<select class="input100">
  								<option value="whatsapp">Whatsapp</option>
  								<option value="telegram">Telegram</option>
  								<option value="opel"></option>
  								<option value="audi"></option>
							</select>
							<span class="focus-input100-1"></span>
							<span class="focus-input100-2"></span>
						</div>
					</div>
					<!-- <div class="container-login100-form-btn m-t-20">
						<button class="login100-form-btn">
							Sign up
						</button>
					</div>-->
						<div id="buttonssss">
							<button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
							<button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
						</div>
					
					<div style="text-align:center;margin-top:40px;">
						<span class="step"></span>
						<span class="step"></span>

					</div>

					<div class="text-center p-t-45 p-b-4">
						<span class="txt1">
							Forgot
						</span>

						<a href="/forgetpw" class="txt2 hov1">
							Username / Password?
						</a>
					</div>

					<div class="text-center">
						<span class="txt1">
							Already registered?
						</span>

						<a href="/loginuser" class="txt2 hov1">
							Login
						</a>
					</div>
				</form>
			</div>
		</div>
	</div>
<script>
	var currentTab = 0; // Current tab is set to be the first tab (0)
	showTab(currentTab); // Display the current tab
	function showTab(n) {
	// This function will display the specified tab of the form...
		var x = document.getElementsByClassName("tab");
		x[n].style.display = "block";
		//... and fix the Previous/Next buttons:
		if (n == 0) {
			document.getElementById("prevBtn").style.display = "none";
		} 
		else {
			document.getElementById("prevBtn").style.display = "inline";
		}
		if (n == (x.length - 1)) {
			document.getElementById("nextBtn").innerHTML = "Submit";
		} 
		else {
			document.getElementById("nextBtn").innerHTML = "Next";
		}
	//... and run a function that will display the correct step indicator:
		fixStepIndicator(n)
	}

	function nextPrev(n) {
		// This function will figure out which tab to display
		var x = document.getElementsByClassName("tab");
		// Exit the function if any field in the current tab is invalid:
		if (n == 1 && !validateForm()) return false;
			// Hide the current tab:
			x[currentTab].style.display = "none";
			// Increase or decrease the current tab by 1:
			currentTab = currentTab + n;
			// if you have reached the end of the form...
		if (currentTab >= x.length) {
			// ... the form gets submitted:
			document.getElementById("regForm").submit();
			return false;
		}
		// Otherwise, display the correct tab:
		showTab(currentTab);
	}

	function validateForm() {
		// This function deals with validation of the form fields
		var x, y, i, valid = true;
		x = document.getElementsByClassName("tab");
		y = x[currentTab].getElementsByTagName("input");
		// A loop that checks every input field in the current tab:
		for (i = 0; i < y.length; i++) {
			// If a field is empty...
			if (y[i].value == "") {
				// add an "invalid" class to the field:
				y[i].className += " invalid";
				// and set the current valid status to false
				valid = false;
			}
		}
		// If the valid status is true, mark the step as finished and valid:
		if (valid) {
			document.getElementsByClassName("step")[currentTab].className += " finish";
		}
		return valid; // return the valid status
	}

	function fixStepIndicator(n) {
		// This function removes the "active" class of all steps...
		var i, x = document.getElementsByClassName("step");
		for (i = 0; i < x.length; i++) {
			x[i].className = x[i].className.replace(" active", "");
		}
		//... and adds the "active" class on the current step:
		x[n].className += " active";
	}
</script>
	

	


</body>
